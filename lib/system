# ~/klooj/dotfiles/lib/system
# 
#----| comment )----------------------------------------------------------+
#           system functions:
#                           small programs
#                           distilled one-liners
#                           routinely used sub-routines
#-------------------------------------------------------------------------+

#====| function ]============#=============#==============#================#
#                name        : history efficiency formula function
#                usage       : Heff
#                result      : percentage of unrepeated commands in history
#==========================================================================#
Heff() {
  local unique_commands
  local total_commands
  local history_efficiency
  
  if [[ -s $HOME/.bash_history ]]; 
    then
      unique_commands="$(sort -u .bash_history | wc -l)"
      total_commands="$(grep '' .bash_history | wc -l)"
      history_efficiency="$(echo "scale=2; ${unique_commands}/${total_commands}*100 | bc -q)"
      printf '%s\n\n' "history efficiency percentage: ${history_efficiency}%"
    else
      printf '%s\n\n' "$HOME/.bash_history does not exist or is empty"
  fi
}

#====| function ]============#=============#==============#================#
#                name        : CleanExit
#                usage       : trap CleanBeforeExit EXIT
#                result      : clean up before script exits
#==========================================================================#
CleanExit() {
  info "Cleaning up. Done"
}
#trap CleanBeforeExit EXIT

#====| function ]============#=============#==============#================#
#                name    : SetupSSH
#                usage   : SetupSSH username
#                result  : create .ssh directory, SSH Keys and set permissions
#==========================================================================#
# IN PROGRESS!
#increase key complexity / create two keys
SetupSSH() {
  local dir_ssh
  dir_ssh="${HOME}/.ssh/${HOSTNAME}"

  echo 'Creating SSH directory, keys, and setting permissions ... '
  mkdir -m 0700 -p "$dir_ssh"

  ssh-keygen -q -N '' -f ${dir_ssh}/id_rsa
  ssh-keygen -q -N '' -f ${dir_ssh}/id_rsa

  chmod 600 ${HOME}/${user_id}.ssh/id_rsa
  chmod 644 ${HOME}/${user_id}.ssh/id_rsa.pub
}

#====| function ]============#=============#==============#================#
#                name    : now
#                usage   : now thats what i call music
#                result  : appends message to log file in $HOME
#==========================================================================#
now() {
  echo "$(date '+%Y-%m-%d %H:%M:%S') - $@" >> $HOME/.now_log
}
