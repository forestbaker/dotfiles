# ~/klooj/dotfiles/routines_system
# 
#----| comment )----------------------------------------------------------+
#           system functions:
#                           small programs
#                           distilled one-liners
#-------------------------------------------------------------------------+

#====| function ]============#=============#==============#================#
#                name        : history efficiency formula function
#                usage       : Heff
#                result      : percentage of unrepeated commands in history
#==========================================================================#
Heff() {
  local unique_commands
  local total_commands
  local history_efficiency
  
  if [[ -s $HOME/.bash_history ]]; 
    then
      unique_commands="$(sort -u .bash_history | wc -l)"
      total_commands="$(grep '' .bash_history | wc -l)"
      history_efficiency="$(echo "scale=2; ${unique_commands}/${total_commands}*100 | bc -q)"
      printf '%s\n\n' "history efficiency percentage: ${history_efficiency}%"
    else
      printf '%s\n\n' "$HOME/.bash_history does not exist or is empty"
  fi
}

#====| function ]============#=============#==============#================#
#                name        : CleanBeforeExit
#                usage       : trap CleanBeforeExit EXIT
#                result      : clean up before script exits
#==========================================================================#
CleanBeforeExit() {
  info "Cleaning up. Done"
}
#trap CleanBeforeExit EXIT

#====| function ]============#=============#==============#================#
#                name    : SetupSSH
#                usage   : SetupSSH username
#                result  : create .ssh directory, SSH Keys and set permissions
#==========================================================================#
# IN PROGRESS!
SetupSSH() {
  local user_id
  user_id=${1:-forest}

  echo "# Initializing SSH key directory, files, and permissions."
  mkdir -m 0700 -p ${HOME}/${user_id}.ssh
#increase key complexity / create two keys
  ssh-keygen -q -N '' -f ${HOME}/${user_id}.ssh/id_rsa
  ssh-keygen -q -N '' -f ${HOME}/${user_id}.ssh/id_rsa
#
  chmod 600 ${HOME}/${user_id}.ssh/id_rsa
  chmod 644 ${HOME}/${user_id}.ssh/id_rsa.pub
  echo
  echo "# Example connection command that should now work:"
  echo "ssh -i ${HOME}/${user_id}.ssh/id_rsa ${user_id}@example.com"
}
